<tb:TaskbarIcon xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:sayclipTray"
                    x:Class="sayclipTray.NotifyIconViewModel">
  <tb:TaskbarIcon.ToolTipText>
    Sayclip    
  </tb:TaskbarIcon.ToolTipText>
  
  
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->

  <tb:TaskbarIcon.ContextMenu>  
    <ContextMenu Name="systraycontextMenu" x:Shared="false" >
       
        
        
        <MenuItem Header="{DynamicResource menu.showwindow}" Command="{Binding ShowWindowCommand}"    />
        <MenuItem Header="{DynamicResource menu.hidewindow}" Command="{Binding HideWindowCommand}" />
        
        <MenuItem Header="{DynamicResource menu.pause}" Command="{Binding PauseSayclipCommand}" />
        <MenuItem Header="{DynamicResource menu.resume}" Command="{Binding ResumeSayclipCommand}" />
        <MenuItem Header="{DynamicResource menu.translation.enable}" Command="{Binding EnableTranslationCommand}" />
        <MenuItem Header="{DynamicResource menu.translation.disable}" Command="{Binding DisableTranslationCommand}" />
        <MenuItem Header="{DynamicResource menu.copy.disable}" Command="{Binding disablecopyresult}" />
        <MenuItem Header="{DynamicResource menu.copy.enable}" Command="{Binding enablecopyresult}" />

        <MenuItem Header="{DynamicResource menu.repeated.enable}" Command="{Binding enableRepeatingText}"/>
        <MenuItem Header="{DynamicResource menu.repeated.disable}" Command="{Binding disablingRepeatingText}" />
        <MenuItem Header="{DynamicResource menu.source}" Name="SourceLanMenu" >
            
        </MenuItem>
        <MenuItem Header="{DynamicResource menu.exchange}" Name="exchangemenu"/>
        <MenuItem Header="{DynamicResource menu.target}" Name="TargetLanMenu" >
            
        </MenuItem>
        <MenuItem Header="{DynamicResource menu.plugin}" Name="translatormenu" >
            
            
        </MenuItem>
        <MenuItem Header="{DynamicResource menu.monitor}" x:Name="monitormenu" ItemsSource="{Binding}" />
        <MenuItem Header="{DynamicResource menu.ui}" Name="uilangmenu">
            
        </MenuItem>
        
<MenuItem Header="{DynamicResource menu.exit}" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>
  </tb:TaskbarIcon.ContextMenu>

    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. 
    <tb:TaskbarIcon x:Key="NotifyIcon" Name="TBIcon" IconSource="/Red.ico" ToolTipText="Sayclip" ContextMenu="{StaticResource SysTrayMenu}">

         self-assign a data context (could also be done programmatically) 
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
        
    </tb:TaskbarIcon>
  -->
  
</tb:TaskbarIcon>